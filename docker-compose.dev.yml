version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: baerenfell_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-baerenfell_db}
      POSTGRES_USER: ${DB_USER:-baerenfell_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-baerenfell_user}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - baerenfell_dev

  # Node.js Application (Development with hot-reload)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: baerenfell_app_dev
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-baerenfell_db}
      DB_USER: ${DB_USER:-baerenfell_user}
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      JWT_SECRET: ${JWT_SECRET:-dev_secret_change_in_production}
      JWT_EXPIRE: 7d
      CLIENT_URL: http://localhost:3000
      ADMIN_EMAIL: admin@baerenfell.store
      ADMIN_PASSWORD: changeme123
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot-reload
      - ./server:/app/server
      - ./client:/app/client
      - ./uploads:/app/uploads
      # Prevent node_modules from being overwritten
      - /app/node_modules
    command: npm run dev
    networks:
      - baerenfell_dev

  # pgAdmin (Database UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: baerenfell_pgadmin_dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@baerenfell.store
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - baerenfell_dev

volumes:
  postgres_dev_data:
  pgadmin_dev_data:

networks:
  baerenfell_dev:
    driver: bridge
