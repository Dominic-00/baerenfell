version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: baerenfell_prod_db
    environment:
      POSTGRES_USER: ${DB_USER:-baerenfell_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: ${DB_NAME:-baerenfell_db}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - baerenfell_prod_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-baerenfell_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    image: ghcr.io/dominic-00/baerenfell:latest
    container_name: baerenfell_prod_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-baerenfell_db}
      DB_USER: ${DB_USER:-baerenfell_user}
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
    ports:
      - "3000:3000"
    volumes:
      - uploads_prod_data:/app/uploads
      - products_prod_pages:/app/client/products
      - artists_prod_pages:/app/client/artists
    networks:
      - baerenfell_prod_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_prod_data:
  uploads_prod_data:
  products_prod_pages:
  artists_prod_pages:

networks:
  baerenfell_prod_network:
    driver: bridge
